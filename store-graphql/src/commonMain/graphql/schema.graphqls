type Query {
  rooms: [Room!]!

  session(id: String!): Session!

  sessions: [Session!]!

  speakers: [Speaker!]!
}

type Room {
  capacity: Int!

  id: String!

  level: String!

  name: String!
}

type Session {
  complexity: String

  description: String!

  endDate: String!

  feedback: String

  icon: String

  id: String!

  language: String

  platformUrl: String

  room: Room!

  slido: String

  speakers: [Speaker!]!

  startDate: String!

  tags: [String!]!

  title: String!
}

type Social {
  icon: String!

  link: String!

  name: String!
}

type Speaker {
  bio: String!

  company: String

  companyLogo: String

  country: String

  featured: Boolean!

  id: String!

  name: String!

  order: Float

  photo: String!

  photoUrl: String!

  shortBio: String!

  socials: [Social!]!
}

schema {
  query: Query
}
